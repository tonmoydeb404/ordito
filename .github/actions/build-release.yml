# .github/actions/build-release.yml
name: "Build Tauri Release"
description: "Build and create a draft release for Tauri application"

inputs:
  tag:
    description: "Git tag to build"
    required: true
  github_token:
    description: "GitHub token for release creation"
    required: true
  signing_private_key:
    description: "Tauri signing private key"
    required: true
  signing_private_key_password:
    description: "Tauri signing private key password"
    required: false
    default: ""
  platform:
    description: "Platform to build for"
    required: false
    default: "ubuntu-22.04"
  args:
    description: "Additional build arguments"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install dependencies (Ubuntu only)
      if: inputs.platform == 'ubuntu-22.04'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.11.0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: "pnpm"

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ inputs.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: "./src-tauri -> target"

    - name: Install frontend dependencies
      shell: bash
      run: pnpm install

    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        TAURI_SIGNING_PRIVATE_KEY: ${{ inputs.signing_private_key }}
        TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ inputs.signing_private_key_password }}
      with:
        tagName: app-${{ inputs.tag }}
        releaseName: "App ${{ inputs.tag }}"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
        args: ${{ inputs.args }}
