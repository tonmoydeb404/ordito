name: "Linux Release"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "ubuntu-22.04"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  generate-updater-json:
    needs: publish-tauri
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Make scripts executable
        run: |
          chmod +x scripts/*.sh

      - name: Get release information
        id: release_info
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          ./scripts/get-release-info.sh

      - name: Download release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./scripts/download-assets.sh \
            "${{ steps.release_info.outputs.release_tag }}" \
            "${{ github.repository }}"

      - name: Generate updater JSON
        env:
          VERSION: ${{ steps.release_info.outputs.version }}
          TAG_NAME: ${{ steps.release_info.outputs.release_tag }}
          PUB_DATE: ${{ steps.release_info.outputs.pub_date }}
          REPOSITORY: ${{ github.repository }}
          ASSETS_DIR: ./assets
          RELEASE_NOTES: "Linux release v${{ steps.release_info.outputs.version }}. Download and install the AppImage file."
        run: |
          node scripts/generate-updater.js

      - name: Validate generated JSON
        run: |
          ./scripts/validate-json.sh latest.json

      - name: Upload JSON and publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./scripts/upload-and-publish.sh \
            "${{ steps.release_info.outputs.release_tag }}" \
            "${{ github.repository }}" \
            "latest.json"
