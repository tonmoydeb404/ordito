name: ordito
base: core22
version: '1.1.0'
summary: A modern desktop application built with Tauri
description: |
  Ordito is a modern desktop application built with Tauri, providing
  a native experience with web technologies.

grade: stable
confinement: strict

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1

apps:
  ordito:
    command: usr/bin/ordito
    desktop: usr/share/applications/ordito.desktop
    extensions: [gnome]
    plugs:
      - network
      - home
      - removable-media

package-repositories:
  - type: apt
    components: [main]
    suites: [noble]
    key-id: 78E1918602959B9C59103100F1831DDAFC42E99D
    url: http://ppa.launchpad.net/snappy-dev/snapcraft-daily/ubuntu

parts:
  build-app:
    plugin: dump
    build-snaps:
      - node/20/stable
      - rustup/latest/stable
    build-packages:
      - libwebkit2gtk-4.1-dev
      - build-essential
      - curl
      - wget
      - file
      - libxdo-dev
      - libssl-dev
      - libayatana-appindicator3-dev
      - librsvg2-dev
      - dpkg
      - pkg-config
    stage-packages:
      - libwebkit2gtk-4.1-0
      - libayatana-appindicator3-1
    source: .
    override-build: |
      set -eu
      
      # Setup Rust environment
      echo "🔧 Setting up Rust environment..."
      export PATH="/snap/bin:$PATH"
      rustup default stable
      rustup update
      
      # Verify Rust installation
      rustc --version
      cargo --version
      
      # Setup Node and PNPM
      echo "📦 Setting up Node and PNPM..."
      npm install -g pnpm
      pnpm --version
      
      # Load environment variables from .env file if it exists
      if [ -f ".env" ]; then
        echo "🔑 Loading environment variables from .env file..."
        
        # Source the .env file properly with special character handling
        while IFS= read -r line; do
          if [[ ! "$line" =~ ^[[:space:]]*# ]] && [[ -n "$line" ]]; then
            export "$line"
          fi
        done < .env
        
        echo "✅ Environment variables loaded"
        
        # Verify signing keys are available (without showing values)
        if [ -n "${TAURI_SIGNING_PRIVATE_KEY:-}" ]; then
          echo "✅ TAURI_SIGNING_PRIVATE_KEY is available (length: ${#TAURI_SIGNING_PRIVATE_KEY})"
        else
          echo "❌ TAURI_SIGNING_PRIVATE_KEY not found"
        fi
        
        if [ -n "${TAURI_SIGNING_PRIVATE_KEY_PASSWORD:-}" ]; then
          echo "✅ TAURI_SIGNING_PRIVATE_KEY_PASSWORD is available (length: ${#TAURI_SIGNING_PRIVATE_KEY_PASSWORD})"
        else
          echo "❌ TAURI_SIGNING_PRIVATE_KEY_PASSWORD not found"
        fi
      else
        echo "⚠️  .env file not found, building without signing"
      fi
      
      # Install dependencies
      echo "📦 Installing dependencies..."
      pnpm install
      
      # Build the application
      echo "🚀 Building Tauri application..."
      pnpm tauri build --bundles deb
      
      # Extract the DEB package
      echo "📋 Extracting DEB package..."
      DEB_FILE=$(find src-tauri/target/release/bundle/deb -name "*.deb" | head -1)
      if [ -z "$DEB_FILE" ]; then
        echo "❌ No DEB file found!"
        ls -la src-tauri/target/release/bundle/deb/
        exit 1
      fi
      
      echo "Found DEB file: $DEB_FILE"
      dpkg -x "$DEB_FILE" $SNAPCRAFT_PART_INSTALL/
      
      # Fix desktop file icon path
      echo "🖼️  Fixing desktop file..."
      DESKTOP_FILE="$SNAPCRAFT_PART_INSTALL/usr/share/applications/ordito.desktop"
      if [ -f "$DESKTOP_FILE" ]; then
        # Update icon path to absolute path
        sed -i -e "s|Icon=ordito|Icon=/usr/share/icons/hicolor/32x32/apps/ordito.png|g" "$DESKTOP_FILE"
        echo "Desktop file updated"
      else
        echo "⚠️  Desktop file not found at expected location"
        find $SNAPCRAFT_PART_INSTALL -name "*.desktop" -type f
      fi
      
      # Verify installation
      echo "✅ Build completed successfully!"
      echo "Installed files:"
      ls -la $SNAPCRAFT_PART_INSTALL/usr/bin/ || true